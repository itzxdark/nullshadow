name: Hackex
on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 350
    
    steps:
      - name: Direct Avica Setup
        run: |
          Write-Host "🚀 Starting Avica setup directly..." -ForegroundColor Green
          
          # Download files directly
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/setup.py" -OutFile "setup.py"
          Invoke-WebRequest -Uri "https://download.avica.com/AvicaLite_v8.0.8.9.exe" -OutFile "Avica_setup.exe"
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/show.bat" -OutFile "show.bat"
          
          # Create modified loop.bat inline
          @'
          @echo off
          title Keep Session Active - Continuous Loop
          echo Starting continuous session keep-alive loop...
          echo This will run indefinitely to prevent idle timeouts.
          echo Press Ctrl+C to stop (but avoid in GitHub Actions).

          :loop
          echo [%date% %time%] Simulating activity to keep session alive...

          REM Try to simulate mouse movement with PyAutoGUI (if available)
          python -c "try: import pyautogui as pag; pag.move(1, 1, duration=0.1); pag.move(0, 0, duration=0.1); print('Mouse simulation successful'); except Exception as e: print('PyAutoGUI not available or error: ' + str(e))" 2>nul

          REM Fallback: Simple keyboard simulation (Shift key toggle) if Python fails or for extra reliability
          powershell -Command "Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.SendKeys]::SendWait('+'); Write-Host 'Keyboard simulation (Shift) sent'"

          REM Wait 30 seconds before next iteration (adjust if needed; shorter = more CPU but better for keeping alive)
          timeout /t 30 /nobreak >nul

          goto loop
          '@ | Out-File -FilePath "loop.bat" -Encoding ascii
          
          # Install Python packages
          python.exe -m pip install requests pyautogui telegraph --quiet
          
          # Enable RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          
          # Set user password
          net user runneradmin TheDisa1a
          
          # Start Avica
          Write-Host "⚡ Starting Avica..." -ForegroundColor Yellow
          python -c "import pyautogui as pag; pag.click(897, 64, duration=2)" 2>$null
          Start-Process "Avica_setup.exe"
          
          # Run setup script
          python setup.py
          
          Write-Host "✅ Setup completed! Check for GoFile link!" -ForegroundColor Green
          
      - name: Setup System User
        run: |
          net user runneradmin TheDisa1a
          Write-Host "✅ System user configured" -ForegroundColor Green
          
      - name: Show Connection Info
        run: |
          Write-Host "
          ╔══════════════════════════════════════╗
          ║        AVICA RDP CONNECTION          ║  
          ╚══════════════════════════════════════╝
          
          
          👨‍💻 Created by dark
          
          📋 Instructions:
          • Go to the GoFile link that will appear below
          • Get Avica ID and Password from there
          • Download Avica app and connect
          • GoFile link changes every time!
          
          ⏳ Waiting for GoFile link...
          " -ForegroundColor Cyan
          
      - name: Start Avica Service
        run: cmd /c show.bat
        
      - name: Keep Session Active
        run: |
          Write-Host "🚀 Avica is starting... Look for CONNECTION ID below!" -ForegroundColor Yellow
          cmd /c loop.bat
